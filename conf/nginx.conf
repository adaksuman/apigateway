worker_processes  2;
error_log logs/error.log info;
events {
    worker_connections 1024;
}
http {
    server {
        listen 8080;
        location / {
           resolver 8.8.4.4; 
            set $target '';
	    access_by_lua '
            local headers = ngx.req.get_headers()
            local authkey = headers["apikey"]
            if not authkey then
                    ngx.log(ngx.ERR," no authkey found")
		    return ngx.exit(400)
             end
	    local redis = require "resty.redis"
            local red = redis:new()
            red:set_timeout(1000) -- 1 second
            local ok, err = red:connect("127.0.0.1", 6379)
            if not ok then
                    ngx.log(ngx.ERR, "failed to connect to redis: ", err)
                    return ngx.exit(500)
            end
            local host, err = red:get(authkey)
            if not host then
                    ngx.log(ngx.ERR, "failed to get redis key: ", err)
                    return ngx.exit(500)
                end
           if host == ngx.null then
                    ngx.log(ngx.ERR, "no host found for key ", key)
                    return ngx.exit(400)
           end 
           ngx.var.target = host
            ';
           proxy_pass http://$target;
        }

    }
}
